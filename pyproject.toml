[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "voxsigil-library"
version = "0.95.0"
description = "VoxSigil Library - Advanced AI Agent Orchestration with HOLO-1.5 Enhanced Cognitive Mesh"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "CryptoCOB", email = "contact@cryptocob.io"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    "PyQt5>=5.15.7,<6.0.0",
    "torch>=1.13.0,<3.0.0",
    "transformers>=4.25.0,<5.0.0",
    "numpy>=1.21.0,<2.0.0",
    "pandas>=1.5.0,<3.0.0",
    "aiohttp>=3.8.0,<4.0.0",
    "requests>=2.28.0,<3.0.0",
    "pyyaml>=6.0,<7.0",
    "typing-extensions>=4.4.0,<5.0.0",
    "openpyxl>=3.0.10,<4.0.0",
    "psutil>=5.9.0,<6.0.0",
    "rich>=12.6.0,<14.0.0",
    "click>=8.1.0,<9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0", 
    "pytest-asyncio>=0.21.0,<1.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.0.0,<2.0.0",
    "black>=22.10.0,<24.0.0",
    "bandit>=1.7.4,<2.0.0",
    "pylint>=2.15.0,<3.0.0",
    "pre-commit>=2.20.0,<4.0.0",
]
gpu = [
    "torch-audio>=0.13.0,<1.0.0",
    "torchaudio>=0.13.0,<1.0.0", 
    "torchvision>=0.14.0,<1.0.0",
]
monitoring = [
    "prometheus-client>=0.15.0,<1.0.0",
    "grafana-api>=1.0.3,<2.0.0",
    "memory-profiler>=0.60.0,<1.0.0",
]
audio = [
    "soundfile>=0.12.0,<1.0.0",
    "librosa>=0.9.2,<1.0.0",
    "pydub>=0.25.1,<1.0.0",
]
ml = [
    "scikit-learn>=1.1.0,<2.0.0",
    "scipy>=1.9.0,<2.0.0",
    "matplotlib>=3.6.0,<4.0.0",
    "seaborn>=0.12.0,<1.0.0",
]
nlp = [
    "nltk>=3.8.0,<4.0.0",
    "spacy>=3.4.0,<4.0.0",
]
all = [
    "voxsigil-library[dev,gpu,monitoring,audio,ml,nlp]"
]

[project.urls]
Homepage = "https://github.com/CryptoCOB/Voxsigil-Library"
Documentation = "https://github.com/CryptoCOB/Voxsigil-Library/docs"
Repository = "https://github.com/CryptoCOB/Voxsigil-Library"
Issues = "https://github.com/CryptoCOB/Voxsigil-Library/issues"
Changelog = "https://github.com/CryptoCOB/Voxsigil-Library/blob/main/CHANGELOG.md"

[project.scripts]
voxsigil = "vanta_cli:main"
vanta-gui = "gui.components.dynamic_gridformer_gui:main" 
vanta-setup = "quick_setup:main"
vanta-test = "setup_phase0_infrastructure:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["Vanta*", "core*", "gui*", "agents*", "engines*", "memory*", "handlers*", "utils*", "config*", "scripts*"]
exclude = ["tests*", "docs*", "testing_infrastructure*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.json", "*.md", "*.txt", "*.voxsigil"]

[tool.ruff]
select = ["E", "F", "W", "C", "N", "B", "I", "UP", "ANN", "S", "BLE", "FBT", "A", "COM", "DTZ", "T20", "RET", "SIM", "TID", "ARG", "PTH", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["E501", "B008", "B904", "ANN101", "ANN102", "COM812", "D", "FBT001", "FBT002", "S101", "TRY003", "PLR0913", "PLR2004"]
line-length = 100
target-version = "py310"
fix = true

[tool.ruff.per-file-ignores]
"tests/*" = ["S", "ANN", "PLR2004"]
"demo_*.py" = ["T20", "S"]
"**/vanta_registration.py" = ["PLR0913"]

[tool.ruff.isort]
known-first-party = ["Vanta", "core", "gui", "agents", "engines", "memory", "handlers", "utils", "config", "scripts"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
no_implicit_reexport = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["PyQt5.*", "torch.*", "transformers.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=. --cov-report=html --cov-report=term-missing --tb=short"
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "testing_infrastructure/*", 
    "demo_*.py",
    "setup.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | testing_infrastructure
)/
'''

